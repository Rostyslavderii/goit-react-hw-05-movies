{"version":3,"file":"static/js/906.8dffbf02.chunk.js","mappings":"kMAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CACe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GACzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CACAjB,OAAMkB,EACR,GACF,CACF,C,mECzBaC,EAAa,WACxB,OAA4BC,EAAAA,EAAAA,UAAS,MAAK,eAAnCC,EAAM,KAAEC,EAAS,KACxB,GAAwCC,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAAEC,EAAe,KAC9BC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAIkB,aAGzB,OAHyB,cAA1B,qGACqBC,EAAAA,EAAAA,IAAmBL,GAAO,KAAD,EAAtCM,EAAI,OACVV,EAAUU,EAAKA,KAAKC,SAAS,4CAC9B,sBANa,OAAVP,GAA4B,KAAVA,GAErB,WACyB,wBAI1BQ,EACF,GAAG,CAACR,IASJ,OACE,iCACE,kBAAMS,SATW,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,OACjBd,EAAgB,CAAEC,MAAOY,EAAKE,SAASC,UAAUpC,QACjDiC,EAAKI,OACP,EAIiC,WAC3B,kBAAOC,KAAK,OAAOC,KAAK,YAAYC,YAAY,kBAChD,mBAAQF,KAAK,SAAQ,uBAEtBtB,IACC,wBACGA,EAAOyB,KAAI,gBAAGC,EAAE,EAAFA,GAAIC,EAAc,EAAdA,eAAc,OAC/B,yBACE,SAAC,KAAI,CAACC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMvB,GAAW,SAClDoB,KAFID,EAIJ,QAMjB,EC5CaK,EAAY,WACvB,IAAMxB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gCACyB,YAAtBD,EAASyB,WAA0B,SAAClC,EAAU,KAC/C,SAAC,KAAM,MAGb,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/SearchBar/SearchBar.jsx","pages/MoviePage.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import { useState, useEffect } from 'react';\nimport { fetchMoviesByQuery } from 'services/movieApi';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\n\nexport const SearchForm = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === null || query === '') {\n      return;\n    }\n    async function fetchMovies() {\n      const data = await fetchMoviesByQuery(query);\n      setMovies(data.data.results);\n    }\n    fetchMovies();\n  }, [query]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    setSearchParams({ query: form.elements.moviename.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"moviename\" placeholder=\"Forrest Gump\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies && (\n        <ul>\n          {movies.map(({ id, original_title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {original_title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","import { Outlet, useLocation } from 'react-router-dom';\nimport { SearchForm } from 'components/SearchBar/SearchBar';\n\nexport const MoviePage = () => {\n  const location = useLocation();\n\n  return (\n    <>\n      {location.pathname === '/movies' && <SearchForm />}\n      <Outlet />\n    </>\n  );\n};\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","SearchForm","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","fetchMoviesByQuery","data","results","fetchMovies","onSubmit","evt","preventDefault","form","target","elements","moviename","reset","type","name","placeholder","map","id","original_title","to","state","from","MoviePage","pathname"],"sourceRoot":""}