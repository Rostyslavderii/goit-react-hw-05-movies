{"version":3,"file":"static/js/433.b1262d57.chunk.js","mappings":"wOAEaA,EAAc,WACzB,IAAMC,ECCqB,WAC3B,OAA0BC,EAAAA,EAAAA,UAAS,MAAK,eAAjCD,EAAK,KAAEE,EAAQ,KACdC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAyBH,GAASI,KAAKL,EACzC,GAAG,CAACC,IAEGH,CACT,CDVgBQ,GAEd,OACER,IACE,8BACiC,IAA9BA,EAAMS,KAAKC,QAAQC,QAClB,wBACGX,EAAMS,KAAKC,QAAQE,KAAI,SAAAC,GAAO,OAC7B,2BACE,wBAAKA,EAAQC,UACb,uBAAID,EAAQE,YAFLF,EAAQG,GAGZ,OAIT,gDAKV,C,mKErBAC,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHC,EAAW,WACtB,OAAOF,EAAAA,EAAAA,IAAM,qBAAsB,CAAEG,OAAQ,CAAEC,QAASH,IAC1D,EAGaI,EAAqB,SAAAC,GAChC,OAAON,EAAAA,EAAAA,IAAM,eAAgB,CAAEG,OAAQ,CAAEC,QAASH,EAASK,MAAAA,IAC7D,EAGaC,EAAiB,SAAArB,GAC5B,OAAOc,EAAAA,EAAAA,IAAM,SAAD,OAAUd,GAAW,CAAEiB,OAAQ,CAAEC,QAASH,IACxD,EAEaO,EAA2B,SAAAtB,GACtC,OAAOc,EAAAA,EAAAA,IAAM,SAAD,OAAUd,EAAO,YAAY,CAAEiB,OAAQ,CAAEC,QAASH,IAChE,EAEaZ,EAA2B,SAAAH,GACtC,OAAOc,EAAAA,EAAAA,IAAM,SAAD,OAAUd,EAAO,YAAY,CAAEiB,OAAQ,CAAEC,QAASH,IAChE,C","sources":["pages/Reviews.jsx","hooks/useFetchForReviews.jsx","services/movieApi.js"],"sourcesContent":["import { useFetchMovie } from 'hooks/useFetchForReviews';\n\nexport const MovieReview = () => {\n  const movie = useFetchMovie();\n\n  return (\n    movie && (\n      <>\n        {movie.data.results.length !== 0 ? (\n          <ul>\n            {movie.data.results.map(reviews => (\n              <li key={reviews.id}>\n                <h2>{reviews.author}</h2>\n                <p>{reviews.content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>Don't Found Reviews</p>\n        )}\n      </>\n    )\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieByIdForReviews } from 'services/movieApi';\n\nexport const useFetchMovie = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieByIdForReviews(movieId).then(setMovie);\n  }, [movieId]);\n\n  return movie;\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e15863a6aae97b6859d248b0c6515614';\n\n\nexport const fetchApi = () => {\n  return axios('trending/movie/day', { params: { api_key: API_KEY } });\n};\n\n\nexport const fetchMoviesByQuery = query => {\n  return axios('search/movie', { params: { api_key: API_KEY, query } });\n};\n\n\nexport const fetchMovieById = movieId => {\n  return axios(`movie/${movieId}`, { params: { api_key: API_KEY } });\n};\n\nexport const fetchMovieByIdForCredits = movieId => {\n  return axios(`movie/${movieId}/credits`, { params: { api_key: API_KEY } });\n};\n\nexport const fetchMovieByIdForReviews = movieId => {\n  return axios(`movie/${movieId}/reviews`, { params: { api_key: API_KEY } });\n};\n"],"names":["MovieReview","movie","useState","setMovie","movieId","useParams","useEffect","fetchMovieByIdForReviews","then","useFetchMovie","data","results","length","map","reviews","author","content","id","axios","API_KEY","fetchApi","params","api_key","fetchMoviesByQuery","query","fetchMovieById","fetchMovieByIdForCredits"],"sourceRoot":""}